name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        dependency-version: [prefer-lowest, prefer-stable]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: json, mbstring
        coverage: xdebug
        
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
          
    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-progress --no-suggest
        if [ "${{ matrix.dependency-version }}" = "prefer-lowest" ]; then
          composer update --prefer-lowest --prefer-dist --no-progress --no-suggest
        fi
        
    - name: Run PHPUnit tests
      run: composer test
      
    - name: Generate code coverage
      if: matrix.php-version == '8.2' && matrix.dependency-version == 'prefer-stable'
      run: composer test-coverage
      
    - name: Upload coverage to Codecov
      if: matrix.php-version == '8.2' && matrix.dependency-version == 'prefer-stable'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: json, mbstring
        
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.2-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.2-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Run PHPStan
      run: composer phpstan
      
    - name: Run PHP Code Sniffer
      run: composer cs-check

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.2-${{ hashFiles('**/composer.lock') }}
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Run security audit
      run: composer audit || true  # Don't fail CI for security issues, just report
      
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: json, mbstring
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Run integration tests
      run: ./vendor/bin/phpunit --testsuite=Integration
      
    - name: Run protocol compliance tests
      run: ./vendor/bin/phpunit --testsuite=Protocol
      
    - name: Test example scripts
      run: |
        php test-edu-100.php
        php test-edu-101.php
        php test-edu-102-simple.php

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, quality, integration]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest --no-dev --optimize-autoloader
      
    - name: Create build artifact
      run: |
        mkdir -p build
        tar -czf build/mcp-php-sdk-${{ github.sha }}.tar.gz \
          --exclude='.git*' \
          --exclude='tests' \
          --exclude='build' \
          --exclude='coverage-report' \
          --exclude='.phpunit.cache' \
          .
          
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: mcp-php-sdk-build
        path: build/
        retention-days: 30

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, quality, security, integration]
    if: always()
    
    steps:
    - name: Notify success
      if: ${{ needs.test.result == 'success' && needs.quality.result == 'success' && needs.integration.result == 'success' }}
      run: echo "✅ All checks passed successfully!"
      
    - name: Notify failure
      if: ${{ needs.test.result == 'failure' || needs.quality.result == 'failure' || needs.integration.result == 'failure' }}
      run: |
        echo "❌ Some checks failed:"
        echo "Test: ${{ needs.test.result }}"
        echo "Quality: ${{ needs.quality.result }}"
        echo "Integration: ${{ needs.integration.result }}"
        exit 1 